// <auto-generated />
using CampSleepawayAssey.DataBaseCamp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CampSleepawayAssey.Migrations
{
    [DbContext(typeof(dbContext))]
    [Migration("20220208182829_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CampSleepawayAssey.DataBaseCamp.Cabin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CabinName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("CounselorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CounselorID");

                    b.ToTable("Cabins");
                });

            modelBuilder.Entity("CampSleepawayAssey.DataBaseCamp.CabinStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CabinArrival")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("CabinDeparture")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("CabinID")
                        .HasColumnType("int");

                    b.Property<int>("CamperID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CabinID");

                    b.HasIndex("CamperID");

                    b.ToTable("CabinStatuses");
                });

            modelBuilder.Entity("CampSleepawayAssey.DataBaseCamp.Camper", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ArrivalDate")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("DepartureDate")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("ID");

                    b.ToTable("Campers");
                });

            modelBuilder.Entity("CampSleepawayAssey.DataBaseCamp.CamperRelative", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CamperID")
                        .HasColumnType("int");

                    b.Property<string>("CamperName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("RelativeID")
                        .HasColumnType("int");

                    b.Property<string>("RelativeName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("ID");

                    b.HasIndex("CamperID");

                    b.HasIndex("RelativeID");

                    b.ToTable("CampersRelatives");
                });

            modelBuilder.Entity("CampSleepawayAssey.DataBaseCamp.Counselor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("ID");

                    b.ToTable("Counselors");
                });

            modelBuilder.Entity("CampSleepawayAssey.DataBaseCamp.NextOfKin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("ID");

                    b.ToTable("Relatives");
                });

            modelBuilder.Entity("CampSleepawayAssey.DataBaseCamp.Cabin", b =>
                {
                    b.HasOne("CampSleepawayAssey.DataBaseCamp.Counselor", "Counselor")
                        .WithMany()
                        .HasForeignKey("CounselorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CampSleepawayAssey.DataBaseCamp.CabinStatus", b =>
                {
                    b.HasOne("CampSleepawayAssey.DataBaseCamp.Cabin", "Cabin")
                        .WithMany()
                        .HasForeignKey("CabinID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampSleepawayAssey.DataBaseCamp.Camper", "Camper")
                        .WithMany()
                        .HasForeignKey("CamperID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CampSleepawayAssey.DataBaseCamp.CamperRelative", b =>
                {
                    b.HasOne("CampSleepawayAssey.DataBaseCamp.Camper", "Camper")
                        .WithMany()
                        .HasForeignKey("CamperID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampSleepawayAssey.DataBaseCamp.NextOfKin", "NextOfKin")
                        .WithMany()
                        .HasForeignKey("RelativeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
